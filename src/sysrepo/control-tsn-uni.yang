module control-tsn-uni {
    yang-version 1.1;
    namespace "urn:isw:controltsn";
    prefix control-tsn-uni;

    import ieee802-dot1q-tsn-types {
        prefix tsn;
    }

    organization "Institute for Control Engineering of Machine Tools and Manufacturing Units - University of Stuttgart";

    description "YANG Module for storing Data in the ControlTSN Framework";

    revision 2021-06-25 {
        description "Initial Revision for ControlTSN Framework";
    }


    // =============================================================
    // ===  Stream groupings
    // =============================================================
    grouping configuration {
        uses tsn:group-status-stream;
        container talker {
            uses tsn:group-status-talker-listener;
        }
        container listener-list {
            list listener {
                key "index";
                leaf index {
                    type uint16;
                }
                uses tsn:group-status-talker-listener;
            }
        }
    }

    grouping request {
        container talker {
            uses tsn:group-talker;
        }
        container listener-list {
            list listener {
                key "index";
                leaf index {
                    type uint16;
                }
                uses tsn:group-listener;
            }
        }
    }

    grouping stream {
        leaf stream-id {
            type tsn:stream-id-type;    // XX-XX-XX-XX-XX-XX:XX-XX
        }
        container request {
            uses request;

            /*
            // === Actions
            action compute-request {
                output {
                    container configuration {
                        uses configuration;
                    }
                }
            }
            */
        }

        container configuration {
            uses configuration;

            /*
            // === Actions
            action deploy-configuration {
                output {
                    container configuration {
                        uses configuration;
                    }
                }
            }
            action undeploy-configuration { }
            action delete-configuration { }
            */
        }
    }

    // =============================================================
    // ===  Modules groupings
    // =============================================================
    grouping module-data-def {
        leaf data-name {
            type string;
        }

        leaf data-type {
            type enumeration {
                enum binary;
                //enum bits-type;
                enum boolean;
                enum decimal64;
                //enum enumeration-type;
                //enum identifyref-type;
                enum instance-identifier;
                enum int8;
                enum int16;
                enum int32;
                enum int64;
                enum string;
                enum uint8;
                enum uint16;
                enum uint32;
                enum uint64;
            }
        }

        leaf data-value {
            //type string;    // Maybe not the best solution. Should each module get a own yang file?
            type union {
                type binary;
                //type bits;                
                type boolean;
                //type enumeration;
                //type identifyref;
                type instance-identifier;
                type int8;
                type int16;
                type int32;
                type int64;
                type string;
                type uint8;
                type uint16;
                type uint32;
                type uint64;
                type decimal64              {fraction-digits 5;}
            }
        }
    }

    grouping module-def {
        leaf id {
            type uint16;
        }
        leaf name {
            type string;
        }
        leaf desc {
            type string;
        }
        leaf executable-path {
            type string;
        }
        leaf subscribed-events-mask {
            type uint16;
        }

        leaf pid {
            type uint32;
        }

        container data {
            list entry {
                key "data-name";
                uses module-data-def;
            }
        }
    }


    // =============================================================
    // ===  Root
    // =============================================================
    container tsn-uni {
        description "The root of the yang module.";
        
        container stream-list {
            list stream {
                key "stream-id";
                uses stream;
            }
        }

        /*

        // Actions should be implemented and callable in the CNC!! 

        // === Actions
        // (Difference between compute and deploy is the status of the stream in the response)
        action compute-all-requests { }
        action deploy-all-configurations { }
        action undeploy-all-configurations { }
        action delete-all-configurations { }
        */

        container modules {
            container available-modules {
                list mod {
                    key "id";
                    uses module-def;
                }
            }

            container registered-modules {
                // TODO Maybe just a instance-identifier as a reference and augment it with 'data'?
                list mod {
                    key "id";
                    uses module-def;
                }
            }
        }
    }
}