<tsn-uni xmlns="urn:isw:controltsn">
  <modules>
    <mod>
        <id>1</id>
        <name>REST</name>
        <desc>Exposes a REST API to interact with the framework</desc>
        <executable-path>./RESTModule</executable-path>
        <subscribed-events-mask>65535</subscribed-events-mask>
        <registered>1</registered>
        <pid>0</pid>
      </mod>
      <mod>
        <id>2</id>
        <name>CUC</name>
        <desc>Represents the Central User Controller in the network based on the central configuration approach of TSN</desc>
        <executable-path>./CUCModule</executable-path>
        <subscribed-events-mask>196641</subscribed-events-mask>
        <registered>1</registered>
        <pid>0</pid>
        <data>
          <entry>
            <data-name>cnc_url</data-name>
            <data-type>string</data-type>
            <data-value>http://localhost:11067</data-value>
          </entry>
        </data>
      </mod>
      <mod>
        <id>3</id>
        <name>Monitor</name>
        <desc>This module monitors the network including the streams and their latency, synchronization etc.</desc>
        <executable-path>./MonitorModule</executable-path>
        <subscribed-events-mask>203535</subscribed-events-mask>
        <registered>1</registered>
        <pid>0</pid>
      </mod>
      <mod>
        <id>4</id>
        <name>Container</name>
        <desc>This module performs the application deployment to the enddevices.</desc>
        <executable-path>./ContainerModule</executable-path>
        <subscribed-events-mask>251658240</subscribed-events-mask>
        <registered>1</registered>
        <pid>0</pid>
        <data>
          <entry>
            <data-name>registry_url</data-name>
            <data-type>string</data-type>
            <data-value>http://containerregistry:5000</data-value>
          </entry>
          <entry>
            <!--
                Access to the Kubernetes control plane has to be
                authenticated. Only authorized users are allowed to perform
                meaningful cluster actions. Therefore, we use `kubectl proxy`.
                It establishes a channel to the cluster and we can use
                localhost as communication endpoint without worrying about
                authentication.
            -->
            <data-name>kubernetes_url</data-name>
            <data-type>string</data-type>
            <data-value>http://localhost:8001</data-value>
          </entry>
        </data>
      </mod>
  </modules>
  <application>
    <apps>
      <app>
        <id>Test_0.0.1</id>
        <name>Test</name>
        <desc>Test Application</desc>
        <version>0.0.1</version>
        <has-image>1</has-image>
        <image-ref>TestImg_0.0.1</image-ref>
      </app>
    </apps>
    <images>
      <image>
        <id>TestImg_0.0.1</id>
        <name>TestImg</name>
        <desc>Test Image</desc>
        <version>0.0.1</version>
      </image>
    </images>
  </application>
</tsn-uni>
